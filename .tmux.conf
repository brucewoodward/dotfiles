set-option -g history-limit 1000

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key a send-prefix
bind-key C-a last-window

bind-key 1 select-window -t 1
bind-key 2 select-window -t 2
bind-key 3 select-window -t 3
bind-key 4 select-window -t 4
bind-key 5 select-window -t 5
bind-key 6 select-window -t 6
bind-key 7 select-window -t 7
bind-key 8 select-window -t 8
bind-key 9 select-window -t 9

bind r source-file ~/.tmux.conf \; display "Reloaded!"

bind-key c new-window -n noname

# Start numbering at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

# auto window rename
set-window-option -g automatic-rename

# color
set -g default-terminal "screen-256color"

bind-key '"' choose-tree -F "#I #F #S #W"

set -g status off
#
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format "#{pane_title}"
bind-key ' ' next-window
#set -g default-command "reattach-to-user-namespace -l /usr/bin/bash"
#
# Panes
bind-key -r j select-pane -t :.-
bind-key -r k select-pane -t :.+
# Cycle to next pane
bind-key -r Tab select-pane -t :.+

bind | split-window -h
bind _ split-window -v

bind-key -n F8 new-window ~/bin/dl

